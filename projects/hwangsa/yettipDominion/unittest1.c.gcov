        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <string.h>
        -:    5:#include <stdio.h>
        -:    6:#include <assert.h>
        -:    7:
        -:    8:int failure_count = 0;
        -:    9:
        3:   10:void assertTrue(int a, int b) {
        3:   11:	if (a == b) {
        3:   12:		printf("Test: Pass\n");
        -:   13:	}
        -:   14:	else {
    #####:   15:		printf("Test: Faile\n");
    #####:   16:		failure_count++;
        -:   17:	}
        3:   18:}
        -:   19:
        1:   20:int main() {
        1:   21:	int num_players = 2;
        -:   22:	
        -:   23:	// kingdom cards
        1:   24:	int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall};
        1:   25:	int seed = 2000;
        -:   26:	struct gameState state;
        -:   27:
        1:   28:	printf("Testing: isGameOver()\n");
        -:   29:
        1:   30:	memset(&state,23,sizeof(struct gameState));
        1:   31:	initializeGame(num_players, k, seed, &state);
        -:   32:
        1:   33:	state.supplyCount[province] = 0;
        -:   34:
        1:   35:	printf("\nProvince cards empty\n");
        1:   36:	assertTrue(isGameOver(&state),1);
        -:   37:
        1:   38:	state.supplyCount[province] = 1;
        -:   39:
        1:   40:	state.supplyCount[0] = 0;
        1:   41:	state.supplyCount[1] = 0;
        1:   42:	state.supplyCount[2] = 0;
        -:   43:
        1:   44:	printf("\n3 supply piles empty\n");
        1:   45:	assertTrue(isGameOver(&state),1);
        -:   46:
        1:   47:	state.supplyCount[0] = 1;
        1:   48:	state.supplyCount[1] = 1;
        1:   49:	state.supplyCount[2] = 1;
        -:   50:
        1:   51:	printf("\nProvince cards not empty\n");
        1:   52:	printf("\n3 supply piles not empty\n");
        1:   53:	assertTrue(isGameOver(&state),0);
        -:   54:
        1:   55:	if(failure_count) {
    #####:   56:		printf("\nTest: Fail\n");
    #####:   57:		printf("Failures: %d\n", failure_count);
        -:   58:	}
        -:   59:	else {
        1:   60:		printf("\nTest: Passed and Completed\n\n");
        -:   61:	}
        -:   62:
        1:   63:	return 0;
        -:   64:}
